[Elab.command] [0.009887] example :
        (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          (c) :=
      by simp only [eq_haa_a]
  [Elab.step] [0.000012] expected type: Sort ?u.72, term
      Type
  [Elab.step] [0.000161] expected type: Sort ?u.74, term
      α → α
    [Elab.step] [0.000087] expected type: Type, term
        α
      [Meta.isDefEq] [0.000028] ✅️ Sort ?u.75 =?= Type
        [Meta.isLevelDefEq] [0.000005] ✅️ ?u.75 =?= 1
    [Elab.step] [0.000046] expected type: Type, term
        α
      [Meta.isDefEq] [0.000011] ✅️ Sort ?u.76 =?= Type
        [Meta.isLevelDefEq] [0.000003] ✅️ ?u.76 =?= 1
  [Elab.step] [0.000116] expected type: Sort ?u.78, term
      α → α
    [Elab.step] [0.000046] expected type: Type, term
        α
      [Meta.isDefEq] [0.000011] ✅️ Sort ?u.79 =?= Type
        [Meta.isLevelDefEq] [0.000003] ✅️ ?u.79 =?= 1
    [Elab.step] [0.000045] expected type: Type, term
        α
      [Meta.isDefEq] [0.000010] ✅️ Sort ?u.80 =?= Type
        [Meta.isLevelDefEq] [0.000002] ✅️ ?u.80 =?= 1
  [Elab.step] [0.000165] expected type: Sort ?u.82, term
      α → α → α
    [Elab.step] [0.000038] expected type: Type, term
        α
      [Meta.isDefEq] [0.000010] ✅️ Sort ?u.83 =?= Type
        [Meta.isLevelDefEq] [0.000002] ✅️ ?u.83 =?= 1
    [Elab.step] [0.000103] expected type: Sort ?u.84, term
        α → α
      [Elab.step] [0.000037] expected type: Type, term
          α
        [Meta.isDefEq] [0.000010] ✅️ Sort ?u.85 =?= Type
          [Meta.isLevelDefEq] [0.000002] ✅️ ?u.85 =?= 1
      [Elab.step] [0.000043] expected type: Type, term
          α
        [Meta.isDefEq] [0.000009] ✅️ Sort ?u.86 =?= Type
          [Meta.isLevelDefEq] [0.000002] ✅️ ?u.86 =?= 1
  [Elab.step] [0.000042] expected type: Type, term
      α
    [Meta.isDefEq] [0.000011] ✅️ Sort ?u.88 =?= Type
      [Meta.isLevelDefEq] [0.000003] ✅️ ?u.88 =?= 1
  [Elab.step] [0.000039] expected type: Type, term
      α
    [Meta.isDefEq] [0.000010] ✅️ Sort ?u.90 =?= Type
      [Meta.isLevelDefEq] [0.000003] ✅️ ?u.90 =?= 1
  [Elab.step] [0.000039] expected type: Type, term
      α
    [Meta.isDefEq] [0.000010] ✅️ Sort ?u.92 =?= Type
      [Meta.isLevelDefEq] [0.000003] ✅️ ?u.92 =?= 1
  [Elab.step] [0.000572] expected type: Sort ?u.94, term
      ∀ x y : α, (h x y) = c
    [Elab.step] [0.000549] expected type: Sort ?u.94, term
        forall (x : α) (y : α), (h x y) = c
      [Elab.step] [0.000046] expected type: Type, term
          α
        [Meta.isDefEq] [0.000013] ✅️ Sort ?u.95 =?= Type
          [Meta.isLevelDefEq] [0.000005] ✅️ ?u.95 =?= 1
      [Elab.step] [0.000040] expected type: Type, term
          α
        [Meta.isDefEq] [0.000011] ✅️ Sort ?u.97 =?= Type
          [Meta.isLevelDefEq] [0.000003] ✅️ ?u.97 =?= 1
      [Elab.step] [0.000402] expected type: Sort ?u.99, term
          (h x y) = c
        [Elab.step] [0.000383] expected type: Sort ?u.99, term
            binrel% Eq✝ (h x y) c
          [Elab.step] [0.000147] expected type: <not-available>, term
              h x y
            [Elab.step] [0.000042] expected type: α, term
                x
              [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Elab.step] [0.000030] expected type: α, term
                y
              [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000001] ✅️ α =?= α
          [Elab.step] [0.000019] expected type: <not-available>, term
              c
          [Meta.isDefEq] [0.000001] ✅️ α =?= α
          [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.isDefEq] [0.000046] ✅️ α =?= ?m.101
            [Meta.isDefEq.assign] [0.000036] ✅️ ?m.101 := α
              [Meta.isDefEq.assign.checkTypes] [0.000019] ✅️ (?m.101 : Sort ?u.100) := (α : Type)
                [Meta.isDefEq] [0.000011] ✅️ Sort ?u.100 =?= Type
                  [Meta.isLevelDefEq] [0.000003] ✅️ ?u.100 =?= 1
          [Meta.isDefEq] [0.000004] ✅️ α =?= α
  [Elab.definition.header] [0.002527] _example
    [Elab.step] [0.002375] expected type: Sort ?u.103, term
        (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          (c)
      [Elab.step] [0.002355] expected type: Sort ?u.103, term
          binrel% Eq✝
            (let HAA0 := h a a;
            let HAA1 := h HAA0 HAA0;
            let HAA2 := h HAA1 HAA1;
            let HAA3 := h HAA2 HAA2;
            let HAA4 := h HAA3 HAA3;
            let HAA5 := h HAA4 HAA4;
            let HAA6 := h HAA5 HAA5;
            HAA6)
            (c)
        [Elab.step] [0.002042] expected type: <not-available>, term
            let HAA0 := h a a;
            let HAA1 := h HAA0 HAA0;
            let HAA2 := h HAA1 HAA1;
            let HAA3 := h HAA2 HAA2;
            let HAA4 := h HAA3 HAA3;
            let HAA5 := h HAA4 HAA4;
            let HAA6 := h HAA5 HAA5;
            HAA6
          [Elab.step] [0.000013] expected type: Sort ?u.105, term
              _
          [Elab.step] [0.000226] expected type: α, term
              h a a
            [Meta.isDefEq] [0.000044] ✅️ ?m.106 =?= α
              [Meta.isDefEq.assign] [0.000032] ✅️ ?m.106 := α
                [Meta.isDefEq.assign.checkTypes] [0.000020] ✅️ (?m.106 : Sort ?u.105) := (α : Type)
                  [Meta.isDefEq] [0.000012] ✅️ Sort ?u.105 =?= Type
                    [Meta.isLevelDefEq] [0.000004] ✅️ ?u.105 =?= 1
            [Elab.step] [0.000042] expected type: α, term
                a
              [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Elab.step] [0.000034] expected type: α, term
                a
              [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000004] ✅️ α =?= α
          [Meta.isDefEq] [0.000003] ✅️ α =?= α
          [Elab.step] [0.001705] expected type: <not-available>, term
              let HAA1 := h HAA0 HAA0;
              let HAA2 := h HAA1 HAA1;
              let HAA3 := h HAA2 HAA2;
              let HAA4 := h HAA3 HAA3;
              let HAA5 := h HAA4 HAA4;
              let HAA6 := h HAA5 HAA5;
              HAA6
            [Elab.step] [0.000010] expected type: Sort ?u.108, term
                _
            [Elab.step] [0.000244] expected type: α, term
                h HAA0 HAA0
              [Meta.isDefEq] [0.000044] ✅️ ?m.109 =?= α
                [Meta.isDefEq.assign] [0.000029] ✅️ ?m.109 := α
                  [Meta.isDefEq.assign.checkTypes] [0.000019] ✅️ (?m.109 : Sort ?u.108) := (α : Type)
                    [Meta.isDefEq] [0.000012] ✅️ Sort ?u.108 =?= Type
                      [Meta.isLevelDefEq] [0.000004] ✅️ ?u.108 =?= 1
              [Elab.step] [0.000077] expected type: α, term
                  HAA0
                [Meta.isDefEq] [0.000003] ✅️ α =?= α
              [Meta.isDefEq] [0.000002] ✅️ α =?= α
              [Elab.step] [0.000035] expected type: α, term
                  HAA0
                [Meta.isDefEq] [0.000002] ✅️ α =?= α
              [Meta.isDefEq] [0.000002] ✅️ α =?= α
              [Meta.isDefEq] [0.000002] ✅️ α =?= α
            [Meta.isDefEq] [0.000002] ✅️ α =?= α
            [Elab.step] [0.001387] expected type: <not-available>, term
                let HAA2 := h HAA1 HAA1;
                let HAA3 := h HAA2 HAA2;
                let HAA4 := h HAA3 HAA3;
                let HAA5 := h HAA4 HAA4;
                let HAA6 := h HAA5 HAA5;
                HAA6
              [Elab.step] [0.000006] expected type: Sort ?u.111, term
                  _
              [Elab.step] [0.000201] expected type: α, term
                  h HAA1 HAA1
                [Meta.isDefEq] [0.000040] ✅️ ?m.112 =?= α
                  [Meta.isDefEq.assign] [0.000028] ✅️ ?m.112 := α
                    [Meta.isDefEq.assign.checkTypes] [0.000018] ✅️ (?m.112 : Sort ?u.111) := (α : Type)
                      [Meta.isDefEq] [0.000011] ✅️ Sort ?u.111 =?= Type
                        [Meta.isLevelDefEq] [0.000003] ✅️ ?u.111 =?= 1
                [Elab.step] [0.000042] expected type: α, term
                    HAA1
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Elab.step] [0.000036] expected type: α, term
                    HAA1
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Meta.isDefEq] [0.000002] ✅️ α =?= α
              [Meta.isDefEq] [0.000002] ✅️ α =?= α
              [Elab.step] [0.001121] expected type: <not-available>, term
                  let HAA3 := h HAA2 HAA2;
                  let HAA4 := h HAA3 HAA3;
                  let HAA5 := h HAA4 HAA4;
                  let HAA6 := h HAA5 HAA5;
                  HAA6
                [Elab.step] [0.000010] expected type: Sort ?u.114, term
                    _
                [Elab.step] [0.000195] expected type: α, term
                    h HAA2 HAA2
                  [Meta.isDefEq] [0.000039] ✅️ ?m.115 =?= α
                    [Meta.isDefEq.assign] [0.000028] ✅️ ?m.115 := α
                      [Meta.isDefEq.assign.checkTypes] [0.000018] ✅️ (?m.115 : Sort ?u.114) := (α : Type)
                        [Meta.isDefEq] [0.000011] ✅️ Sort ?u.114 =?= Type
                          [Meta.isLevelDefEq] [0.000003] ✅️ ?u.114 =?= 1
                  [Elab.step] [0.000040] expected type: α, term
                      HAA2
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Elab.step] [0.000031] expected type: α, term
                      HAA2
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Meta.isDefEq] [0.000002] ✅️ α =?= α
                [Elab.step] [0.000857] expected type: <not-available>, term
                    let HAA4 := h HAA3 HAA3;
                    let HAA5 := h HAA4 HAA4;
                    let HAA6 := h HAA5 HAA5;
                    HAA6
                  [Elab.step] [0.000006] expected type: Sort ?u.117, term
                      _
                  [Elab.step] [0.000203] expected type: α, term
                      h HAA3 HAA3
                    [Meta.isDefEq] [0.000048] ✅️ ?m.118 =?= α
                      [Meta.isDefEq.assign] [0.000040] ✅️ ?m.118 := α
                        [Meta.isDefEq.assign.checkTypes] [0.000021] ✅️ (?m.118 : Sort ?u.117) := (α : Type)
                          [Meta.isDefEq] [0.000014] ✅️ Sort ?u.117 =?= Type
                            [Meta.isLevelDefEq] [0.000004] ✅️ ?u.117 =?= 1
                    [Elab.step] [0.000035] expected type: α, term
                        HAA3
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Elab.step] [0.000031] expected type: α, term
                        HAA3
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Meta.isDefEq] [0.000002] ✅️ α =?= α
                  [Elab.step] [0.000591] expected type: <not-available>, term
                      let HAA5 := h HAA4 HAA4;
                      let HAA6 := h HAA5 HAA5;
                      HAA6
                    [Elab.step] [0.000006] expected type: Sort ?u.120, term
                        _
                    [Elab.step] [0.000199] expected type: α, term
                        h HAA4 HAA4
                      [Meta.isDefEq] [0.000042] ✅️ ?m.121 =?= α
                        [Meta.isDefEq.assign] [0.000035] ✅️ ?m.121 := α
                          [Meta.isDefEq.assign.checkTypes] [0.000024] ✅️ (?m.121 : Sort ?u.120) := (α : Type)
                            [Meta.isDefEq] [0.000014] ✅️ Sort ?u.120 =?= Type
                              [Meta.isLevelDefEq] [0.000003] ✅️ ?u.120 =?= 1
                      [Elab.step] [0.000034] expected type: α, term
                          HAA4
                        [Meta.isDefEq] [0.000002] ✅️ α =?= α
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                      [Elab.step] [0.000035] expected type: α, term
                          HAA4
                        [Meta.isDefEq] [0.000006] ✅️ α =?= α
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Meta.isDefEq] [0.000002] ✅️ α =?= α
                    [Elab.step] [0.000321] expected type: <not-available>, term
                        let HAA6 := h HAA5 HAA5;
                        HAA6
                      [Elab.step] [0.000011] expected type: Sort ?u.123, term
                          _
                      [Elab.step] [0.000202] expected type: α, term
                          h HAA5 HAA5
                        [Meta.isDefEq] [0.000037] ✅️ ?m.124 =?= α
                          [Meta.isDefEq.assign] [0.000029] ✅️ ?m.124 := α
                            [Meta.isDefEq.assign.checkTypes] [0.000019] ✅️ (?m.124 : Sort ?u.123) := (α : Type)
                              [Meta.isDefEq] [0.000013] ✅️ Sort ?u.123 =?= Type
                                [Meta.isLevelDefEq] [0.000004] ✅️ ?u.123 =?= 1
                        [Elab.step] [0.000041] expected type: α, term
                            HAA5
                          [Meta.isDefEq] [0.000008] ✅️ α =?= α
                        [Meta.isDefEq] [0.000002] ✅️ α =?= α
                        [Elab.step] [0.000035] expected type: α, term
                            HAA5
                          [Meta.isDefEq] [0.000002] ✅️ α =?= α
                        [Meta.isDefEq] [0.000002] ✅️ α =?= α
                        [Meta.isDefEq] [0.000002] ✅️ α =?= α
                      [Meta.isDefEq] [0.000002] ✅️ α =?= α
                      [Elab.step] [0.000034] expected type: <not-available>, term
                          HAA6
        [Elab.step] [0.000024] expected type: <not-available>, term
            c
        [Meta.isDefEq] [0.000001] ✅️ α =?= α
        [Meta.isDefEq] [0.000001] ✅️ α =?= α
        [Meta.isDefEq] [0.000000] ✅️ α =?= α
        [Meta.isDefEq] [0.000048] ✅️ α =?= ?m.133
          [Meta.isDefEq.assign] [0.000039] ✅️ ?m.133 := α
            [Meta.isDefEq.assign.checkTypes] [0.000028] ✅️ (?m.133 : Sort ?u.104) := (α : Type)
              [Meta.isDefEq] [0.000020] ✅️ Sort ?u.104 =?= Type
                [Meta.isLevelDefEq] [0.000004] ✅️ ?u.104 =?= 1
        [Meta.isDefEq] [0.000003] ✅️ α =?= α
    [Meta.instantiateMVars] [0.000005] (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          c
  [Meta.instantiateMVars] [0.000000] (let HAA0 := h a a;
        let HAA1 := h HAA0 HAA0;
        let HAA2 := h HAA1 HAA1;
        let HAA3 := h HAA2 HAA2;
        let HAA4 := h HAA3 HAA3;
        let HAA5 := h HAA4 HAA4;
        let HAA6 := h HAA5 HAA5;
        HAA6) =
        c
  [Elab.definition.value] [0.004447] _example
    [Elab.step] [0.000017] expected type: (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          c, term
        by simp only [eq_haa_a]
    [Meta.isDefEq] [0.000001] ✅️ (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          c =?= (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          c
    [Elab.step] [0.004051] simp only [eq_haa_a]
      [Elab.step] [0.003993] simp only [eq_haa_a]
        [Elab.step] [0.003956] simp only [eq_haa_a]
          [Meta.whnf] [0.000045] Non-easy whnf: (a = a) = True
          [Meta.whnf] [0.000002] Non-easy whnf: (?a = ?a) = True
          [Meta.whnf] [0.000002] Non-easy whnf: (?a = ?a) = True
          [Meta.whnf] [0.000003] Non-easy whnf: (p ↔ p) = True
          [Meta.whnf] [0.000001] Non-easy whnf: (?p ↔ ?p) = True
          [Meta.whnf] [0.000001] Non-easy whnf: (?p ↔ ?p) = True
          [Meta.whnf] [0.000017] Non-easy whnf: h x y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h x y = c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000005] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000215] ✅️ h ?x ?y =?= h a a
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000031] ✅️ ?x =?= a
              [Meta.isDefEq.assign] [0.000022] ✅️ ?x := a
                [Meta.isDefEq.assign.checkTypes] [0.000010] ✅️ (?x : α) := (a : α)
                  [Meta.isDefEq] [0.000001] ✅️ α =?= α
            [Meta.isDefEq] [0.000024] ✅️ ?y =?= a
              [Meta.isDefEq.assign] [0.000017] ✅️ ?y := a
                [Meta.isDefEq.assign.checkTypes] [0.000008] ✅️ (?y : α) := (a : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000005] Non-easy whnf: h a a = c
          [Meta.whnf] [0.000004] Non-easy whnf: h (h a a) = h c
          [Meta.whnf] [0.000002] Non-easy whnf: h a a = c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000108] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000039] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000019] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000008] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000026] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000020] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000011] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000005] Non-easy whnf: h (h a a) (h a a) = h c c
          [Meta.whnf] [0.000003] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000004] Non-easy whnf: h (h a a) (h a a) = c
          [Meta.whnf] [0.000003] Non-easy whnf: h (h (h a a) (h a a)) = h c
          [Meta.whnf] [0.000002] Non-easy whnf: h (h a a) (h a a) = c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000007] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000089] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000030] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000018] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000008] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000020] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000014] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000007] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000004] Non-easy whnf: h (h (h a a) (h a a)) (h (h a a) (h a a)) = h c c
          [Meta.whnf] [0.000002] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000003] Non-easy whnf: h (h (h a a) (h a a)) (h (h a a) (h a a)) = c
          [Meta.whnf] [0.000003] Non-easy whnf: h (h (h (h a a) (h a a)) (h (h a a) (h a a))) = h c
          [Meta.whnf] [0.000002] Non-easy whnf: h (h (h a a) (h a a)) (h (h a a) (h a a)) = c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000091] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000025] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000018] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000008] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000026] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000020] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000013] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000004] Non-easy whnf: h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                  (h (h (h a a) (h a a)) (h (h a a) (h a a))) =
                h c c
          [Meta.whnf] [0.000002] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000003] Non-easy whnf: h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                  (h (h (h a a) (h a a)) (h (h a a) (h a a))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))) =
                h c
          [Meta.whnf] [0.000002] Non-easy whnf: h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                  (h (h (h a a) (h a a)) (h (h a a) (h a a))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000085] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000029] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000022] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000012] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000020] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000015] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000007] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000004] Non-easy whnf: h
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))) =
                h c c
          [Meta.whnf] [0.000002] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))) =
                h c
          [Meta.whnf] [0.000002] Non-easy whnf: h
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                  (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000091] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000028] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000021] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000011] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000024] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000018] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000007] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000004] Non-easy whnf: h
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))) =
                h c c
          [Meta.whnf] [0.000002] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                h c
          [Meta.whnf] [0.000002] Non-easy whnf: h
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                  (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                    (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h ?x ?y = c
          [Meta.whnf] [0.000002] Non-easy whnf: h ?x ?y = c
          [Meta.isDefEq] [0.000085] ✅️ h ?x ?y =?= h c c
            [Meta.isDefEq] [0.000001] ✅️ h =?= h
            [Meta.isDefEq] [0.000029] ✅️ ?x =?= c
              [Meta.isDefEq.assign] [0.000022] ✅️ ?x := c
                [Meta.isDefEq.assign.checkTypes] [0.000013] ✅️ (?x : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
            [Meta.isDefEq] [0.000020] ✅️ ?y =?= c
              [Meta.isDefEq.assign] [0.000014] ✅️ ?y := c
                [Meta.isDefEq.assign.checkTypes] [0.000007] ✅️ (?y : α) := (c : α)
                  [Meta.isDefEq] [0.000000] ✅️ α =?= α
          [Meta.whnf] [0.000004] Non-easy whnf: h
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                h c c
          [Meta.whnf] [0.000002] Non-easy whnf: h c c = c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                c
          [Meta.whnf] [0.000003] Non-easy whnf: h
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                  (h
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                    (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                      (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                c
          [Meta.whnf] [0.000004] Non-easy whnf: (?a = ?a) = True
          [Meta.whnf] [0.000003] Non-easy whnf: (?a = ?a) = True
          [Meta.isDefEq] [0.000181] ✅️ ?a = ?a =?= c = c
            [Meta.isDefEq] [0.000038] ✅️ ?α =?= α
              [Meta.isDefEq.assign] [0.000031] ✅️ ?α := α
                [Meta.isDefEq.assign.checkTypes] [0.000021] ✅️ (?α : Sort ?u.186) := (α : Type)
                  [Meta.isDefEq] [0.000013] ✅️ Sort ?u.186 =?= Type
                    [Meta.isLevelDefEq] [0.000004] ✅️ ?u.186 =?= 1
            [Meta.isDefEq] [0.000038] ✅️ ?a =?= c
              [Meta.isDefEq.assign] [0.000019] ✅️ ?a := c
                [Meta.isDefEq.assign.checkTypes] [0.000010] ✅️ (?a : α) := (c : α)
                  [Meta.isDefEq] [0.000003] ✅️ α =?= α
            [Meta.isDefEq] [0.000002] ✅️ c =?= c
            [Meta.isLevelDefEq] [0.000007] ✅️ ?u.186 =?= 1
              [Meta.isLevelDefEq] [0.000000] ✅️ 0 =?= 0
          [Meta.whnf] [0.000005] Non-easy whnf: (h
                    (h
                      (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                        (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                      (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                        (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                    (h
                      (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                        (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                      (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                        (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                  c) =
                (c = c)
          [Meta.whnf] [0.000003] Non-easy whnf: (c = c) = True
          [Meta.appBuilder] [0.000175] ✅️ f: of_eq_true, xs: [Eq.trans
                 (congrArg (fun x => x = c)
                   (Eq.trans
                     (congr
                       (congrArg h
                         (Eq.trans
                           (congr
                             (congrArg h
                               (Eq.trans
                                 (congr
                                   (congrArg h
                                     (Eq.trans
                                       (congr
                                         (congrArg h
                                           (Eq.trans
                                             (congr
                                               (congrArg h
                                                 (Eq.trans
                                                   (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                     ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) c c)))
                                               (Eq.trans
                                                 (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) c c)))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         (Eq.trans
                                           (congr
                                             (congrArg h
                                               (Eq.trans
                                                 (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) c c)))
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       ((fun x y => eq_haa_a x y) c c)))
                                   (Eq.trans
                                     (congr
                                       (congrArg h
                                         (Eq.trans
                                           (congr
                                             (congrArg h
                                               (Eq.trans
                                                 (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) c c)))
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     ((fun x y => eq_haa_a x y) c c)))
                                 ((fun x y => eq_haa_a x y) c c)))
                             (Eq.trans
                               (congr
                                 (congrArg h
                                   (Eq.trans
                                     (congr
                                       (congrArg h
                                         (Eq.trans
                                           (congr
                                             (congrArg h
                                               (Eq.trans
                                                 (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) c c)))
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     ((fun x y => eq_haa_a x y) c c)))
                                 (Eq.trans
                                   (congr
                                     (congrArg h
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     (Eq.trans
                                       (congr
                                         (congrArg h
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         (Eq.trans
                                           (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       ((fun x y => eq_haa_a x y) c c)))
                                   ((fun x y => eq_haa_a x y) c c)))
                               ((fun x y => eq_haa_a x y) c c)))
                           ((fun x y => eq_haa_a x y) c c)))
                       (Eq.trans
                         (congr
                           (congrArg h
                             (Eq.trans
                               (congr
                                 (congrArg h
                                   (Eq.trans
                                     (congr
                                       (congrArg h
                                         (Eq.trans
                                           (congr
                                             (congrArg h
                                               (Eq.trans
                                                 (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                   ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) c c)))
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     ((fun x y => eq_haa_a x y) c c)))
                                 (Eq.trans
                                   (congr
                                     (congrArg h
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     (Eq.trans
                                       (congr
                                         (congrArg h
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         (Eq.trans
                                           (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       ((fun x y => eq_haa_a x y) c c)))
                                   ((fun x y => eq_haa_a x y) c c)))
                               ((fun x y => eq_haa_a x y) c c)))
                           (Eq.trans
                             (congr
                               (congrArg h
                                 (Eq.trans
                                   (congr
                                     (congrArg h
                                       (Eq.trans
                                         (congr
                                           (congrArg h
                                             (Eq.trans
                                               (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                 ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) c c)))
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     (Eq.trans
                                       (congr
                                         (congrArg h
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         (Eq.trans
                                           (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       ((fun x y => eq_haa_a x y) c c)))
                                   ((fun x y => eq_haa_a x y) c c)))
                               (Eq.trans
                                 (congr
                                   (congrArg h
                                     (Eq.trans
                                       (congr
                                         (congrArg h
                                           (Eq.trans
                                             (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                               ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) c c)))
                                         (Eq.trans
                                           (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       ((fun x y => eq_haa_a x y) c c)))
                                   (Eq.trans
                                     (congr
                                       (congrArg h
                                         (Eq.trans
                                           (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                             ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) c c)))
                                       (Eq.trans
                                         (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                           ((fun x y => eq_haa_a x y) a a))
                                         ((fun x y => eq_haa_a x y) c c)))
                                     ((fun x y => eq_haa_a x y) c c)))
                                 ((fun x y => eq_haa_a x y) c c)))
                             ((fun x y => eq_haa_a x y) c c)))
                         ((fun x y => eq_haa_a x y) c c)))
                     ((fun x y => eq_haa_a x y) c c)))
                 (eq_self c)]
            [Meta.isDefEq] [0.000134] ✅️ ?p =
                  True =?= (h
                      (h
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                      (h
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                            (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                    c) =
                  True
              [Meta.isDefEq] [0.000047] ✅️ ?p =?= h
                      (h
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                      (h
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                        (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                          (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                            (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                    c
                [Meta.isDefEq.assign] [0.000035] ✅️ ?p := h
                        (h
                          (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                            (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                          (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                            (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                              (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                        (h
                          (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                            (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                          (h (h (h (h (h a a) (h a a)) (h (h a a) (h a a))) (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                            (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                              (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                      c
                  [Meta.isDefEq.assign.checkTypes] [0.000017] ✅️ (?p : Prop) := (h
                          (h
                            (h
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                            (h
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a))))))
                          (h
                            (h
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a)))))
                            (h
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a))))
                              (h (h (h (h a a) (h a a)) (h (h a a) (h a a)))
                                (h (h (h a a) (h a a)) (h (h a a) (h a a)))))) =
                        c : Prop)
                    [Meta.isDefEq] [0.000009] ✅️ Prop =?= Prop
                      [Meta.isLevelDefEq] [0.000000] ✅️ 0 =?= 0
              [Meta.isDefEq] [0.000001] ✅️ True =?= True
              [Meta.isDefEq] [0.000005] ✅️ Prop =?= Prop
                [Meta.isLevelDefEq] [0.000000] ✅️ 0 =?= 0
              [Meta.isLevelDefEq] [0.000000] ✅️ 0 =?= 0
    [Meta.instantiateMVars] [0.000002] of_eq_true
          (Eq.trans
            (congrArg (fun x => x = c)
              (Eq.trans
                (congr
                  (congrArg h
                    (Eq.trans
                      (congr
                        (congrArg h
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr
                                          (congrArg h
                                            (Eq.trans
                                              (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                                ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) c c)))
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      ((fun x y => eq_haa_a x y) c c)))
                  (Eq.trans
                    (congr
                      (congrArg h
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      (Eq.trans
                        (congr
                          (congrArg h
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        ((fun x y => eq_haa_a x y) c c)))
                    ((fun x y => eq_haa_a x y) c c)))
                ((fun x y => eq_haa_a x y) c c)))
            (eq_self c))
  [Meta.instantiateMVars] [0.000000] of_eq_true
        (Eq.trans
          (congrArg (fun x => x = c)
            (Eq.trans
              (congr
                (congrArg h
                  (Eq.trans
                    (congr
                      (congrArg h
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      (Eq.trans
                        (congr
                          (congrArg h
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        ((fun x y => eq_haa_a x y) c c)))
                    ((fun x y => eq_haa_a x y) c c)))
                (Eq.trans
                  (congr
                    (congrArg h
                      (Eq.trans
                        (congr
                          (congrArg h
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        ((fun x y => eq_haa_a x y) c c)))
                    (Eq.trans
                      (congr
                        (congrArg h
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      ((fun x y => eq_haa_a x y) c c)))
                  ((fun x y => eq_haa_a x y) c c)))
              ((fun x y => eq_haa_a x y) c c)))
          (eq_self c))
  [Meta.instantiateMVars] [0.000000] (let HAA0 := h a a;
        let HAA1 := h HAA0 HAA0;
        let HAA2 := h HAA1 HAA1;
        let HAA3 := h HAA2 HAA2;
        let HAA4 := h HAA3 HAA3;
        let HAA5 := h HAA4 HAA4;
        let HAA6 := h HAA5 HAA5;
        HAA6) =
        c
  [Meta.instantiateMVars] [0.000000] of_eq_true
        (Eq.trans
          (congrArg (fun x => x = c)
            (Eq.trans
              (congr
                (congrArg h
                  (Eq.trans
                    (congr
                      (congrArg h
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr
                                        (congrArg h
                                          (Eq.trans
                                            (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                              ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) c c)))
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      (Eq.trans
                        (congr
                          (congrArg h
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        ((fun x y => eq_haa_a x y) c c)))
                    ((fun x y => eq_haa_a x y) c c)))
                (Eq.trans
                  (congr
                    (congrArg h
                      (Eq.trans
                        (congr
                          (congrArg h
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr
                                      (congrArg h
                                        (Eq.trans
                                          (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                            ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) c c)))
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        ((fun x y => eq_haa_a x y) c c)))
                    (Eq.trans
                      (congr
                        (congrArg h
                          (Eq.trans
                            (congr
                              (congrArg h
                                (Eq.trans
                                  (congr
                                    (congrArg h
                                      (Eq.trans
                                        (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                          ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) c c)))
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  ((fun x y => eq_haa_a x y) c c)))
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            ((fun x y => eq_haa_a x y) c c)))
                        (Eq.trans
                          (congr
                            (congrArg h
                              (Eq.trans
                                (congr
                                  (congrArg h
                                    (Eq.trans
                                      (congr (congrArg h ((fun x y => eq_haa_a x y) a a))
                                        ((fun x y => eq_haa_a x y) a a))
                                      ((fun x y => eq_haa_a x y) c c)))
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                ((fun x y => eq_haa_a x y) c c)))
                            (Eq.trans
                              (congr
                                (congrArg h
                                  (Eq.trans
                                    (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                    ((fun x y => eq_haa_a x y) c c)))
                                (Eq.trans
                                  (congr (congrArg h ((fun x y => eq_haa_a x y) a a)) ((fun x y => eq_haa_a x y) a a))
                                  ((fun x y => eq_haa_a x y) c c)))
                              ((fun x y => eq_haa_a x y) c c)))
                          ((fun x y => eq_haa_a x y) c c)))
                      ((fun x y => eq_haa_a x y) c c)))
                  ((fun x y => eq_haa_a x y) c c)))
              ((fun x y => eq_haa_a x y) c c)))
          (eq_self c))
  [Meta.instantiateMVars] [0.000000] (let HAA0 := h a a;
        let HAA1 := h HAA0 HAA0;
        let HAA2 := h HAA1 HAA1;
        let HAA3 := h HAA2 HAA2;
        let HAA4 := h HAA3 HAA3;
        let HAA5 := h HAA4 HAA4;
        let HAA6 := h HAA5 HAA5;
        HAA6) =
        c
  [Elab.def.maxSharing] [0.000187] share common exprs
  [Elab.def.fixLevelParams] [0.000043] fix level params
  [Elab.def.processPreDef] [0.000402] process pre-definitions
[Elab.command] [0.000096] end
[Elab.command] [0.010134] set_option trace.profiler.threshold 0 in
    example :
        (let HAA0 := h a a;
          let HAA1 := h HAA0 HAA0;
          let HAA2 := h HAA1 HAA1;
          let HAA3 := h HAA2 HAA2;
          let HAA4 := h HAA3 HAA3;
          let HAA5 := h HAA4 HAA4;
          let HAA6 := h HAA5 HAA5;
          HAA6) =
          (c) :=
      by simp only [eq_haa_a]
[Elab.async] [0.001032] Lean.addDecl
  [Kernel] [0.000999] typechecking declarations [_example]
[Elab.async] [0.000392] Lean.compileDecls
  [compiler] [0.000065] compiling old: [_example]
